//
// Generated file, do not edit! Created by nedtool 5.7 from CustomMessage.msg.
//

#ifndef __CUSTOMMESSAGE_M_H
#define __CUSTOMMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>CustomMessage.msg:17</tt> by nedtool.
 * <pre>
 * message customMessage
 * {
 *     int numberToSave;
 *     int log[];//the size of this vector can be set dynamically;
 *     //this would be a vector to send a portion of the log in a message
 *     int numberToSendBack;//only for testing, i put here the number and then i send back to the client
 * }
 * </pre>
 */
class customMessage : public ::omnetpp::cMessage
{
  protected:
    int numberToSave;
    int *log; // array ptr
    unsigned int log_arraysize;
    int numberToSendBack;

  private:
    void copy(const customMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const customMessage&);

  public:
    customMessage(const char *name=nullptr, short kind=0);
    customMessage(const customMessage& other);
    virtual ~customMessage();
    customMessage& operator=(const customMessage& other);
    virtual customMessage *dup() const override {return new customMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getNumberToSave() const;
    virtual void setNumberToSave(int numberToSave);
    virtual void setLogArraySize(unsigned int size);
    virtual unsigned int getLogArraySize() const;
    virtual int getLog(unsigned int k) const;
    virtual void setLog(unsigned int k, int log);
    virtual int getNumberToSendBack() const;
    virtual void setNumberToSendBack(int numberToSendBack);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const customMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, customMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CUSTOMMESSAGE_M_H

